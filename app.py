import os
from flask import Flask, request, jsonify, render_template, send_file
from dotenv import load_dotenv
from flask_cors import CORS
import google.generativeai as genai
from PIL import Image
import io
import matplotlib.pyplot as plt

# Load bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# C·∫•u h√¨nh Gemini
genai.configure(api_key=GEMINI_API_KEY)
model = genai.GenerativeModel("gemini-1.5-flash")

app = Flask(__name__)
CORS(app)

# üîç H√†m ki·ªÉm tra xem c√¢u h·ªèi c√≥ ph·∫£i To√°n h·ªçc kh√¥ng
def is_math_question(question):
    keywords = ["gi·∫£i", "ph∆∞∆°ng tr√¨nh", "t√≠nh", "ƒë·∫°o h√†m", "t√≠ch ph√¢n", "bi·ªÉu ƒë·ªì", "h√¨nh h·ªçc", "v·∫Ω"]
    return any(kw in question.lower() for kw in keywords)

# üñºÔ∏è T·∫°o ·∫£nh t·ª´ l·ªùi gi·∫£i vƒÉn b·∫£n
def generate_math_image(solution_text):
    try:
        fig, ax = plt.subplots(figsize=(10, 3))
        ax.text(0.5, 0.5, solution_text, fontsize=14, ha='center', va='center', wrap=True)
        ax.axis('off')
        buf = io.BytesIO()
        plt.savefig(buf, format='png', bbox_inches='tight')
        buf.seek(0)
        return buf
    except Exception as e:
        print("‚ùå L·ªói khi t·∫°o ·∫£nh To√°n:", e)
        return None

# üì§ G·ª≠i ·∫£nh + c√¢u h·ªèi t·ªõi Gemini v√† x·ª≠ l√Ω k·∫øt qu·∫£
def ask_gemini_with_image(question, image):
    try:
        img = Image.open(image)
        print("üì§ G·ª≠i h√¨nh ·∫£nh + c√¢u h·ªèi t·ªõi Gemini:", question)

        response = model.generate_content(
            [question, img],
            stream=False,
        )

        answer = response.text
        print("üì• Ph·∫£n h·ªìi t·ª´ Gemini:", answer)

        if is_math_question(question):
            img_buf = generate_math_image(answer)
            return {"image": img_buf}

        return {"text": answer}

    except Exception as e:
        print("‚ùå L·ªói x·ª≠ l√Ω ·∫£nh:", e)
        return {"error": str(e)}

# Trang ch√≠nh
@app.route('/')
def home():
    return render_template('index.html')

# API: G·ª≠i ·∫£nh + c√¢u h·ªèi
@app.route('/ask-image', methods=['POST'])
def ask_with_image():
    try:
        question = request.form.get('question')
        image = request.files.get('image')

        if not question or not image:
            return jsonify({"error": "C·∫ßn cung c·∫•p c·∫£ c√¢u h·ªèi v√† h√¨nh ·∫£nh."}), 400

        result = ask_gemini_with_image(question, image)

        if "image" in result:
            return send_file(result["image"], mimetype='image/png')

        elif "text" in result:
            return jsonify({"answer": result["text"]})

        else:
            return jsonify({"error": result.get("error", "L·ªói kh√¥ng x√°c ƒë·ªãnh.")}), 500

    except Exception as e:
        print("‚ùå L·ªói t·ªïng qu√°t:", e)
        return jsonify({"error": f"ƒê√£ x·∫£y ra l·ªói: {str(e)}"}), 500

if __name__ == '__main__':
    print("üîß GEMINI_API_KEY:", GEMINI_API_KEY[:8] + "***")
    app.run(host='0.0.0.0', port=5000, debug=True)
